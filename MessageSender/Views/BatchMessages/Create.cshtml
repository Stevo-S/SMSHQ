@model MessageSender.Models.BatchMessage

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <ul class="nav nav-pills nav-justified">
        <li class="active"><a data-toggle="pill" href="#fromDatabase"><strong>FROM DATABASE</strong></a></li>
        <li><a data-toggle="pill" href="#fromFile"><strong>FROM FILE</strong></a></li>
    </ul>


    <div class="form-horizontal">
        <h4>BatchMessage</h4>
        <hr />
        <div>
            <div class="form-group col-md-12">
                <label class="radio-inline"><input type="radio" name="ChainedMessage" value="true" data-bind="checked: chainedMessage"><strong>Chained Message</strong></label>
                <label class="radio-inline"><input type="radio" name="ChainedMessage" value="false" data-bind="checked: chainedMessage"><strong>Individual Message</strong></label>
            </div>
        </div>

        <div class="tab-content">
            <div id="fromDatabase" class="tab-pane fade in active"
                 data-shortCodes="@Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ShortCodes)" data-availableServices="@Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Services)">

                <div id="ShortCodesDropDown" data-bind="visible: chainedMessage() == 'false'">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Sender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select name="Sender" id="Sender" data-bind="options: shortCodes, optionsCaption: 'Select Short Code...', value: selectedShortCode, enable: chainedMessage() == 'false'" class="form-control" required></select>
                            @*@Html.DropDownListFor(model => model.ServiceId, (SelectList)ViewBag.ShortCodes, new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" data-bind="visible: selectedShortCode">
                        @Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select name="ServiceId" id="ServiceId" data-bind="options: associatedServices, optionsCaption: 'Select Service...', optionsText: 'Name', optionsValue: 'ServiceId', enable: chainedMessage() == 'false'" class="form-control" required></select>
                            @*@Html.DropDownListFor(model => model.ServiceId, (SelectList)ViewBag.Services, new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group" data-bind="visible: chainedMessage() == 'true'">
                    @Html.Label("Short Codes ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div id="ShortCodeList" class="col-md-10">
                        <select multiple name="ServiceIds" id="ServiceIds" data-bind="options: availableServices, optionsText: 'Name', optionsValue: 'ServiceId', enable: chainedMessage() == 'true'" size="8" class="form-control" required></select>
                        @*@Html.DropDownListFor(model => model.ServiceId, (SelectList)ViewBag.Services, new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="fromFile" class="tab-pane fade">
                <div class="form-group">
                    @Html.LabelFor(model => model.Sender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ServiceId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ServiceId, new { htmlAttributes = new { @class = "form-control", minimum = "10", maximum = "20" } })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="contactsFile" class="control-label col-md-2">Contacts File: </label>
                    <div class="col-md-4">
                        <input type="file" name="contactsFile" id="contactsFile" accept=".xlsx" />
                    </div>
                </div>
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MessageContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MessageContent, new { htmlAttributes = new { @class = "form-control", rows = "8", required = "true", data_bind = "textInput: messageContent" } })
                @Html.ValidationMessageFor(model => model.MessageContent, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <p class="text-info"><strong>Number of SMSs: <span data-bind="text: smsCount" class="badge"></span></strong></p>
                <p class="text-info"><strong>Characters left: <span data-bind="text: charactersLeft" class="badge"></span></strong></p>
                <textarea hidden id="MessageContentCopy"></textarea>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts {
    @Scripts.Render("~/Scripts/batchmessage.js")
}